{"version":3,"sources":["../../build/index.main.mjs","App.js","reportWebVitals.js","index.js"],"names":["_version","_backendVersion","getExports","s","reachStdlib","_getViews","viewlib","infos","views","_getMaps","mapDataTy","T_Tuple","Alice","ctc","interact","undefined","sendrecv","Promise","reject","Error","stdlib","ctc0","T_UInt","ctc1","ctc2","T_Digest","v15","protect","amt","v16","pass","v20","digest","args","evt_cnt","funcNum","onlyIf","out_tys","pay","sim_p","txn1","sim_r","txns","mapRefs","mapsPrev","mapsNext","data","v23","time","secs","from","push","kind","tok","isHalt","soloSend","timeoutAt","tys","waitIfNotPresent","v22","recv","txn2","v35","v39","v40","digestEq","assert","at","fs","msg","who","Bob","getPass","v31","v32","v33","checkedBigNumberify","UInt_max","v34","to","_Connectors","ALGO","appApproval","appClear","escrow","mapDataKeys","mapDataSize","unsupported","version","viewKeys","viewSize","ETH","ABI","Bytecode","BytecodeLen","Which","deployMode","process","REACT_APP_NETWORK_PROVIDER","REACT_APP_NETWORK","loadStdlib","setProviderByName","setSignStrategy","hasFaucet","App","useState","acc","state","setState","query","setQuery","handleChange","target","name","value","parseInt","handleConnect","a","console","log","getDefaultAccount","getAddress","addr","balanceOf","balAtomic","bal","formatCurrency","handleFaucet","getFaucet","faucet","parseCurrency","transfer","handleAlice","deploy","backend","AMT","PASS","handleBob","INFO","attach","Container","Row","className","Col","xs","href","ButtonGroup","as","size","Button","onClick","variant","map","title","controls","col","control","placeholder","type","buttonLabel","buttonProps","disabled","role","el","Form","Control","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9949e07.chunk.js","sourcesContent":["// Automatically generated with Reach 0.1.3\n/* eslint-disable */\nexport const _version = '0.1.3';\nexport const _backendVersion = 1;\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  \n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  \n  };\n\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\n\nexport async function Alice(ctc, interact) {\n  if (typeof(ctc) !== 'object' || ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for Alice expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Alice expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Tuple([ctc0]);\n  const ctc2 = stdlib.T_Digest;\n  \n  \n  \n  const v15 = stdlib.protect(ctc0, interact.amt, 'for Alice\\'s interact field amt');\n  const v16 = stdlib.protect(ctc0, interact.pass, 'for Alice\\'s interact field pass');\n  \n  const v20 = stdlib.digest(ctc1, [v16]);\n  \n  const txn1 = await (ctc.sendrecv({\n    args: [v20, v15],\n    evt_cnt: 2,\n    funcNum: 1,\n    onlyIf: true,\n    out_tys: [ctc2, ctc0],\n    pay: [v15, []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const [v22, v23] = txn1.data;\n      const v26 = txn1.time;\n      const v27 = txn1.secs;\n      const v21 = txn1.from;\n      \n      sim_r.txns.push({\n        amt: v23,\n        kind: 'to',\n        tok: undefined\n        });\n      sim_r.isHalt = false;\n      \n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc2, ctc0],\n    waitIfNotPresent: false\n    }));\n  const [v22, v23] = txn1.data;\n  const v26 = txn1.time;\n  const v27 = txn1.secs;\n  const v21 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv({\n    evt_cnt: 1,\n    funcNum: 2,\n    out_tys: [ctc0],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const [v35] = txn2.data;\n  const v37 = txn2.time;\n  const v38 = txn2.secs;\n  const v34 = txn2.from;\n  ;\n  const v39 = stdlib.digest(ctc1, [v35]);\n  const v40 = stdlib.digestEq(v22, v39);\n  stdlib.assert(v40, {\n    at: './index.rsh:75:12:application',\n    fs: [],\n    msg: 'Digests actually match',\n    who: 'Alice'\n    });\n  ;\n  return;\n  \n  \n  };\nexport async function Bob(ctc, interact) {\n  if (typeof(ctc) !== 'object' || ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for Bob expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Bob expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Digest;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1]);\n  \n  \n  \n  const txn1 = await (ctc.recv({\n    evt_cnt: 2,\n    funcNum: 1,\n    out_tys: [ctc0, ctc1],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const [v22, v23] = txn1.data;\n  const v26 = txn1.time;\n  const v27 = txn1.secs;\n  const v21 = txn1.from;\n  ;\n  const v31 = stdlib.protect(ctc1, await interact.getPass(), {\n    at: './index.rsh:61:47:application',\n    fs: ['at ./index.rsh:60:13:application call to [unknown function] (defined at: ./index.rsh:60:17:function exp)'],\n    msg: 'getPass',\n    who: 'Bob'\n    });\n  const v32 = stdlib.digest(ctc2, [v31]);\n  const v33 = stdlib.digestEq(v22, v32);\n  stdlib.assert(v33, {\n    at: './index.rsh:62:13:application',\n    fs: ['at ./index.rsh:60:13:application call to [unknown function] (defined at: ./index.rsh:60:17:function exp)'],\n    msg: null,\n    who: 'Bob'\n    });\n  \n  const txn2 = await (ctc.sendrecv({\n    args: [v22, v23, v31],\n    evt_cnt: 1,\n    funcNum: 2,\n    onlyIf: true,\n    out_tys: [ctc1],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn2) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const [v35] = txn2.data;\n      const v37 = txn2.time;\n      const v38 = txn2.secs;\n      const v34 = txn2.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v39 = stdlib.digest(ctc2, [v35]);\n      const v40 = stdlib.digestEq(v22, v39);\n      stdlib.assert(v40, {\n        at: './index.rsh:75:12:application',\n        fs: [],\n        msg: 'Digests actually match',\n        who: 'Bob'\n        });\n      sim_r.txns.push({\n        amt: v23,\n        kind: 'from',\n        to: v34,\n        tok: undefined\n        });\n      sim_r.txns.push({\n        kind: 'halt',\n        tok: undefined\n        })\n      sim_r.isHalt = true;\n      \n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0, ctc1, ctc1],\n    waitIfNotPresent: false\n    }));\n  const [v35] = txn2.data;\n  const v37 = txn2.time;\n  const v38 = txn2.secs;\n  const v34 = txn2.from;\n  ;\n  const v39 = stdlib.digest(ctc2, [v35]);\n  const v40 = stdlib.digestEq(v22, v39);\n  stdlib.assert(v40, {\n    at: './index.rsh:75:12:application',\n    fs: [],\n    msg: 'Digests actually match',\n    who: 'Bob'\n    });\n  ;\n  return;\n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 4\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nsubstring 0 32\nstore 1\nsubstring 32 64\nstore 2\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\ndup\nbz ctor\n// Handler 1\ndup\nint 1\n==\nbz l0\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 0\n==\nassert\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 40\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\npop\n// compute state in HM_Check 0\nint 8\nbzero\nsha256\nload 1\n==\nassert\n// \"CheckPay\"\n// \"./index.rsh:51:11:dot\"\n// \"[]\"\nload 254\ndup\nbz l1\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Receiver\n==\nassert\nl1:\npop\n// compute state in HM_Set 1\nbyte base64(AAAAAAAAAAE=)\nload 255\nconcat\nload 254\nitob\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0:\n// Handler 2\ndup\nint 2\n==\nbz l2\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 40\n==\nassert\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 253\npop\n// compute state in HM_Check 1\nbyte base64(AAAAAAAAAAE=)\nload 255\nconcat\nload 254\nitob\nconcat\nsha256\nload 1\n==\nassert\n// \"CheckPay\"\n// \"./index.rsh:64:9:dot\"\n// \"[]\"\n// Just \"Digests actually match\"\n// \"./index.rsh:75:12:application\"\n// \"[]\"\nload 255\nload 253\nitob\nsha256\n==\nassert\nload 254\ndup\nbz l3\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\ntxn Sender\ndig 1\ngtxns Receiver\n==\nassert\nl3:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl4:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl2:\nint 0\nassert\nupdateState:\nbyte base64()\nload 1\nload 2\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nbyte base64()\nint 64\nbzero\napp_global_put\nb checkSize\nctor:\ntxn Sender\nglobal CreatorAddress\n==\nassert\ntxna ApplicationArgs 1\nstore 2\n// compute state in HM_Set 0\nint 8\nbzero\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\n`,\n  appClear: `#pragma version 4\nint 0\n`,\n  escrow: `#pragma version 4\nglobal GroupSize\nint 1\n-\ndup\ngtxns TypeEnum\nint appl\n==\nassert\ngtxns ApplicationID\nint {{ApplicationID}}\n==\nassert\ndone:\nint 1\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  unsupported: [],\n  version: 2,\n  viewKeys: 0,\n  viewSize: 0\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"svs\",\n            \"type\": \"bool\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v22\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v23\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T2\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"svs\",\n            \"type\": \"bool\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v22\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v23\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T2\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v22\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v23\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v35\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v22\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v23\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v35\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x60806040526040516103db3803806103db8339810160408190526100229161012c565b6040517f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805182511515815260208084015180518284015201518183015290517f3c669845d6bbc6fc367c9fa11ea5c8ec9bfd3d70eae7b34375b93f114f7403659181900360600190a160208082015101516100a89034146007610103565b60408051808201909152600080825260208201526020808301805151835251810151828201526040516100e091600191849101610194565b60408051601f198184030181529190528051602090910120600055506101ef9050565b816101285760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b6000818303606081121561013f57600080fd5b6101476101b9565b8351801515811461015757600080fd5b81526040601f198301121561016b57600080fd5b6101736101b9565b60208581015182526040909501518582015293810193909352509092915050565b828152606081016101b2602083018480518252602090810151910152565b9392505050565b604080519081016001600160401b03811182821017156101e957634e487b7160e01b600052604160045260246000fd5b60405290565b6101dd806101fe6000396000f3fe6080604052600436106100225760003560e01c8063212df9891461002e57600080fd5b3661002957005b600080fd5b61004161003c36600461016a565b610043565b005b60405161007f9061005b906001908490602001610182565b6040516020818303038152906040528051906020012060001c60005414600a610141565b60008055604080518235815260208084013590820152828201358183015290517fa27a43895875369be7ca68bfe853b87f531a2fd742a2d699a603684d920b05309181900360600190a16100d534156008610141565b60408051818301356020820152610109910160408051601f1981840301815291905280516020909101208235146009610141565b6040513390602083013580156108fc02916000818181858888f19350505050158015610139573d6000803e3d6000fd5b506000805533ff5b816101665760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b60006060828403121561017c57600080fd5b50919050565b828152606081016101a0602083018480358252602090810135910152565b939250505056fea2646970667358221220ef114d105b849fe3009f04b06ca0f4805c50d328d43315142597d6e257d09d6d64736f6c63430008050033`,\n  BytecodeLen: 987,\n  Which: `oD`,\n  deployMode: `DM_firstMsg`,\n  version: 1,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n","import { useState } from 'react'\nimport * as backend from './build/index.main.mjs';\nimport { loadStdlib } from '@reach-sh/stdlib';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Form from 'react-bootstrap/Form'\nimport './App.css'\n\nconst { REACT_APP_NETWORK_PROVIDER, REACT_APP_NETWORK } = process.env\n\nconst stdlib = loadStdlib(REACT_APP_NETWORK)\nstdlib.setProviderByName(REACT_APP_NETWORK_PROVIDER)\nif (REACT_APP_NETWORK === 'ALGO') {\n  stdlib.setSignStrategy('mnemonic')\n}\n\nconst hasFaucet = true\n  && REACT_APP_NETWORK === 'ETH'\n  && REACT_APP_NETWORK_PROVIDER === 'LocalHost'\n\nfunction App() {\n  const [state, setState] = useState({\n    acc: null\n  })\n  const [query, setQuery] = useState({})\n  const handleChange = ({ target }) => {\n    let { name, value } = target\n    switch (name) {\n      case 'INFO':\n      case 'PASS':\n      case 'AMT':\n        value = parseInt(value)\n        break\n      default:\n        break\n    }\n    setQuery({ ...query, [name]: value })\n  }\n\n  const handleConnect = async () => {\n    console.log(\"Connecting ...\")\n    const acc = await stdlib.getDefaultAccount()\n    const addr = await acc.getAddress();\n    const balAtomic = await stdlib.balanceOf(acc);\n    const bal = stdlib.formatCurrency(balAtomic, 4);\n    setState({\n      ...state,\n      acc,\n      addr,\n      balAtomic,\n      bal\n    })\n  }\n\n  const handleFaucet = async () => {\n    console.log(\"Faucet ...\")\n    const faucet = await stdlib.getFaucet()\n    await stdlib.transfer(\n      faucet,\n      await stdlib.getDefaultAccount(),\n      stdlib.parseCurrency('100')\n    )\n  }\n\n  const handleAlice = async () => {\n    console.log(\"Handling alice ...\")\n    const ctc = state.acc.deploy(backend)\n    setState({ ...state, ctc })\n    await backend.Alice(ctc, {\n      amt: stdlib.parseCurrency(query.AMT),\n      pass: query.PASS\n    })\n  }\n\n  const handleBob = async () => {\n    console.log(\"Handling bob ...\")\n    let { INFO, PASS } = query\n    const ctc = state.acc.attach(backend, INFO)\n    await backend.Bob(ctc, {\n      getPass: () => {\n        console.log(`Bob asked to give the preimage`);\n        console.log(`Returning: ${PASS}`);\n        return PASS\n      }\n    })\n  }\n\n  return (\n    <Container>\n      <Row className=\"mt-5\">\n        <Col>\n          <h1 className=\"text-center\">HashLock</h1>\n        </Col>\n        <Col className=\"text-center\" xs={12}>\n          This runs on the <a href=\"https://testnet.algoexplorer.io/\">Algorand Test Net</a>. Need funds? Try <a href=\"https://bank.testnet.algorand.network/\">Algorand dispenser.</a>\n        </Col>\n      </Row>\n      <Row className=\"mt-5 role role-participant\">\n        <ButtonGroup as={Col} xs={2} size=\"lg\">\n          {!state.acc && <Button onClick={handleConnect}>Connect</Button>}\n          {hasFaucet && <Button variant=\"secondary\" onClick={handleFaucet}>Faucet</Button>}\n        </ButtonGroup>\n      </Row>\n      {state.acc && <Row>\n        {[\n          'addr',\n          'bal'\n        ].map(name =>\n          <Col xs={12}>{name}: {state[name]}</Col>\n        )}\n      </Row>}\n      {[\n        {\n          name: \"alice\",\n          title: \"Send funds\",\n          controls: [\n            { col: {}, control: { name: \"AMT\", placeholder: \"Amount\" } },\n            { col: { xs: 6 }, control: { name: \"PASS\", type: \"number\", placeholder: \"Secret number\" } }\n          ],\n          buttonLabel: \"Send\",\n          buttonProps: {\n            onClick: handleAlice,\n            disabled: !state.acc\n          }\n        },\n        {\n          name: \"bob\",\n          title: \"Receive funds\",\n          controls: [\n            {\n              col: {},\n              control: {\n                name: REACT_APP_NETWORK === 'ETH' ? \"ADDR\" : \"INFO\",\n                type: REACT_APP_NETWORK === 'ETH' ? \"text\" : \"number\",\n                placeholder: \"Info\",\n              }\n            },\n            { col: { xs: 6 }, control: { name: \"PASS\", type: \"number\", placeholder: \"Secret number\" } }\n          ],\n          buttonLabel: \"Receive\",\n          buttonProps: {\n            onClick: handleBob,\n            disabled: !state.acc\n          }\n        }\n      ].map(role =>\n        <Row className={`mt-5 role ${role.name}`}>\n          <Col xs={12} className=\"mb-3\">\n            <h2>\n              {role.title}\n            </h2>\n          </Col>\n          {role.controls.map(el =>\n            <Col xs={3} {...el.col}>\n              <Form.Control className=\"mb-3\" size=\"lg\" type=\"text\" onChange={handleChange} {...el.control} />\n            </Col>\n          )}\n          <Col xs={3}>\n            <Button size=\"lg\" {...role.buttonProps}>{role.buttonLabel}</Button>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}